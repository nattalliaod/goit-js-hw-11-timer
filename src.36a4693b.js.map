{"version":3,"sources":["js/refs.js","js/timer.js","index.js"],"names":["daysC","document","querySelector","hoursC","minsC","secondsC","refs","Timer","constructor","targetDate","markup","deltaTime","start","setInterval","currentTime","Date","now","timeComponents","getTimeComponents","insertValues","time","days","pad","Math","floor","hours","mins","seconds","value","String","padStart","innerHTML","timer"],"mappings":";;;AAAe,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,EAAA,CACbA,MAAOC,SAASC,cAAe,uBAC/BC,OAAQF,SAASC,cAAe,wBAChCE,MAAOH,SAASC,cAAe,uBAC/BG,SAAUJ,SAASC,cAAe,wBAJrB,QAAA,QAAA;;ACoDf,aApDA,IAAA,EAAA,EAAA,QAAA,WAoDA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAlDA,MAAM,MAAEF,EAAF,OAASG,EAAT,MAAiBC,EAAjB,SAAwBC,GAAaC,EAA3C,QAEA,MAAMC,EACJC,aAAY,WAAEC,EAAF,OAAcC,IACnBJ,KAAAA,KAAO,CAAEN,MAAAA,EAAOG,OAAAA,EAAQC,MAAAA,EAAOC,SAAAA,GAC/BI,KAAAA,WAAaA,EACbE,KAAAA,UAAY,EACZD,KAAAA,OAASA,EAIfE,QACAC,YAAY,KACJC,MAAAA,EAAcC,KAAKC,MAEnBL,EAAY,KAAKF,WAAaK,EAE7BG,EAAiB,KAAKC,kBAAkBP,GAEvCQ,KAAAA,aAAaF,IACnB,KAGJC,kBAAkBE,GAMR,MAAA,CAAEC,KALE,KAAKC,IAAIC,KAAKC,MAAMJ,EAAQ,QAKzBK,MAJF,KAAKH,IAAIC,KAAKC,MAAOJ,EAAQ,MAAyB,OAI7CM,KAHV,KAAKJ,IAAIC,KAAKC,MAAOJ,EAAQ,KAAoB,MAGjCO,QAFb,KAAKL,IAAIC,KAAKC,MAAOJ,EAAQ,IAAc,OAK5DE,IAAIM,GACIC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAGlCX,cAAa,KAAEE,EAAF,MAAQI,EAAR,KAAeC,EAAf,QAAqBC,IAC5BrB,KAAAA,KAAKN,MAAM+B,UAAYV,EACvBf,KAAAA,KAAKH,OAAO4B,UAAYN,EACxBnB,KAAAA,KAAKF,MAAM2B,UAAYL,EACvBpB,KAAAA,KAAKD,SAAS0B,UAAYJ,GAInC,MAAMK,EAAQ,IAAIzB,EAAM,CAEtBE,WAAY,IAAIM,KAAM,iBAIxBiB,EAAMpB;;ACnDN,aADA,QAAA,oBACA,QAAA","file":"src.36a4693b.js","sourceRoot":"../src","sourcesContent":["export default {\n  daysC: document.querySelector(`[data-value=\"days\"]`),\n  hoursC: document.querySelector(`[data-value=\"hours\"]`),\n  minsC: document.querySelector(`[data-value=\"mins\"]`),\n  secondsC: document.querySelector(`[data-value=\"secs\"]`),\n}","import refs from './refs'\n\nconst { daysC, hoursC, minsC, secondsC } = refs\n\nclass Timer {\n  constructor({ targetDate, markup }) {\n    this.refs = { daysC, hoursC, minsC, secondsC }\n    this.targetDate = targetDate;\n    this.deltaTime = 0;\n    this.markup = markup;\n    \n  }\n\n   start() {\n   setInterval(() => {\n     const currentTime = Date.now()\n    //  console.log(currentTime);\n     const deltaTime = this.targetDate - currentTime\n    //  console.log(this.targetDate);\n      const timeComponents = this.getTimeComponents(deltaTime)\n        // console.log(timeComponents);\n        this.insertValues(timeComponents)\n    }, 1000);\n  }\n\n   getTimeComponents(time) {\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)))\n    const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const seconds = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n      return { days,hours, mins, seconds };\n  }\n\n   pad(value) {\n    return String(value).padStart(2, '0');\n  }\n\n   insertValues({ days, hours, mins, seconds }) {\n    this.refs.daysC.innerHTML = days;\n    this.refs.hoursC.innerHTML = hours;\n    this.refs.minsC.innerHTML = mins;\n    this.refs.secondsC.innerHTML = seconds;\n}\n}\n\nconst timer = new Timer({\n\n  targetDate: new Date(`jan 1, 2022`),\n \n});\n// Timer.start()\ntimer.start()\n\n\n","import './sass/main.scss';\nimport './js/timer.js'\n\n"]}