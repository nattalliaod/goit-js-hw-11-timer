{"version":3,"sources":["js/timer.js","index.js"],"names":["CountdownTimer","constructor","targetDate","selector","refs","_getRefs","start","root","daysC","document","querySelector","hoursC","minsC","secondsC","setInterval","deltaTime","Date","now","insertValues","getTimeComponents","time","days","pad","Math","floor","hours","mins","seconds","value","String","padStart","innerHTML","timer"],"mappings":";;;AAEA,MAAMA,EACFC,aAAY,WAAEC,EAAF,SAAcC,IACnBA,KAAAA,SAAWA,EACXD,KAAAA,WAAaA,EACbE,KAAAA,KAAO,KAAKC,SAASF,GAErBG,KAAAA,QAETD,SAASE,GACDH,MAAAA,EAAO,GAKHA,OAJTA,EAAKI,MAAQC,SAASC,iBAAiBH,yBACvCH,EAAKO,OAASF,SAASC,iBAAiBH,0BACxCH,EAAKQ,MAAQH,SAASC,iBAAiBH,yBACvCH,EAAKS,SAAWJ,SAASC,iBAAiBH,yBACjCH,EAGVE,QACAQ,YAAY,KACJC,MAAAA,EAAY,KAAKb,WAAac,KAAKC,MAGlCC,KAAAA,aAAa,KAAKC,kBAAkBJ,KAC1C,KAGHI,kBAAkBC,GAMR,MAAA,CAAEC,KALK,KAAKC,IAAIC,KAAKC,MAAMJ,EAAQ,QAK5BK,MAJD,KAAKH,IAAIC,KAAKC,MAAOJ,EAAQ,MAAyB,OAI9CM,KAHT,KAAKJ,IAAIC,KAAKC,MAAOJ,EAAQ,KAAoB,MAGlCO,QAFZ,KAAKL,IAAIC,KAAKC,MAAOJ,EAAQ,IAAc,OAK7DE,IAAIM,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAGnCZ,cAAa,KAAEG,EAAF,MAAQI,EAAR,KAAeC,EAAf,QAAqBC,IAC3BvB,KAAAA,KAAKI,MAAMuB,UAAYV,EACvBjB,KAAAA,KAAKO,OAAOoB,UAAYN,EACxBrB,KAAAA,KAAKQ,MAAMmB,UAAYL,EACvBtB,KAAAA,KAAKS,SAASkB,UAAYJ,GAIrC,MAAMK,EAAQ,IAAIhC,EAAe,CAE7BG,SAAU,WACVD,WAAY,IAAIc,KAAK;;ACnDzB,aADA,QAAA,oBACA,QAAA","file":"src.05beb604.js","sourceRoot":"../src","sourcesContent":["// import refs from './refs'\n\nclass CountdownTimer {\n    constructor({ targetDate, selector }) {\n      this.selector = selector\n      this.targetDate = targetDate\n      this.refs = this._getRefs(selector)\n    \n      this.start()\n  }\n  _getRefs(root) {\n    const refs = {}\n     refs.daysC = document.querySelector(`${root} [data-value=\"days\"]`),\n     refs.hoursC = document.querySelector(`${root} [data-value=\"hours\"]`),\n     refs.minsC = document.querySelector(`${root} [data-value=\"mins\"]`),\n     refs.secondsC = document.querySelector(`${root} [data-value=\"secs\"]`)\n       return refs\n  }\n\n    start() {\n    setInterval(() => {\n      const deltaTime = this.targetDate - Date.now()\n        // const timeComponents = this.getTimeComponents(deltaTime)\n        // console.log(timeComponents);\n        this.insertValues(this.getTimeComponents(deltaTime))\n    }, 1000);\n  }\n\n    getTimeComponents(time) {\n        const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n      const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n      const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n      const seconds = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n       return { days,hours, mins, seconds };\n  }\n\n    pad(value) {\n      return String(value).padStart(2, '0');\n  }\n\n    insertValues({ days, hours, mins, seconds }) {\n      this.refs.daysC.innerHTML = days;\n      this.refs.hoursC.innerHTML = hours;\n      this.refs.minsC.innerHTML = mins;\n      this.refs.secondsC.innerHTML = seconds;\n}\n}\n\nconst timer = new CountdownTimer({\n\n    selector: '#timer-1',\n    targetDate: new Date('Jan 1, 2022'),\n});\n\n\n\n","import './sass/main.scss';\nimport './js/timer.js'\n\n"]}