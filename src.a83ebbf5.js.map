{"version":3,"sources":["js/refs.js","js/timer.js","index.js"],"names":["daysC","document","querySelector","hoursC","minsC","secondsC","CountdownTimer","constructor","targetDate","selector","refs","start","setInterval","deltaTime","Date","now","insertValues","getTimeComponents","time","days","pad","Math","floor","hours","mins","seconds","value","String","padStart","innerHTML","timer"],"mappings":";;;AAAe,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,EAAA,CACbA,MAAOC,SAASC,cAAe,uBAC/BC,OAAQF,SAASC,cAAe,wBAChCE,MAAOH,SAASC,cAAe,uBAC/BG,SAAUJ,SAASC,cAAe,wBAJrB,QAAA,QAAA;;AC0Cf,aA1CA,IAAA,EAAA,EAAA,QAAA,WA0CA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAxCA,MAAMI,EACFC,aAAY,WAAEC,EAAF,SAAcC,IAChB,MAAA,MAAET,EAAF,OAASG,EAAT,MAAiBC,EAAjB,SAAwBC,GAAaK,EAA3C,QACKD,KAAAA,SAAWA,EACXC,KAAAA,KAAO,CAAEV,MAAAA,EAAOG,OAAAA,EAAQC,MAAAA,EAAOC,SAAAA,GAC/BG,KAAAA,WAAaA,EAEbG,KAAAA,QAGTA,QACAC,YAAY,KACJC,MAAAA,EAAY,KAAKL,WAAaM,KAAKC,MAGlCC,KAAAA,aAAa,KAAKC,kBAAkBJ,KAC1C,KAGHI,kBAAkBC,GAMR,MAAA,CAAEC,KALK,KAAKC,IAAIC,KAAKC,MAAMJ,EAAQ,QAK5BK,MAJD,KAAKH,IAAIC,KAAKC,MAAOJ,EAAQ,MAAyB,OAI9CM,KAHT,KAAKJ,IAAIC,KAAKC,MAAOJ,EAAQ,KAAoB,MAGlCO,QAFZ,KAAKL,IAAIC,KAAKC,MAAOJ,EAAQ,IAAc,OAK7DE,IAAIM,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAGnCZ,cAAa,KAAEG,EAAF,MAAQI,EAAR,KAAeC,EAAf,QAAqBC,IAC3Bf,KAAAA,KAAKV,MAAM6B,UAAYV,EACvBT,KAAAA,KAAKP,OAAO0B,UAAYN,EACxBb,KAAAA,KAAKN,MAAMyB,UAAYL,EACvBd,KAAAA,KAAKL,SAASwB,UAAYJ,GAIrC,MAAMK,EAAQ,IAAIxB,EAAe,CAE7BG,SAAU,WACVD,WAAY,IAAIM,KAAK;;AC5CzB,aADA,QAAA,oBACA,QAAA","file":"src.a83ebbf5.js","sourceRoot":"../src","sourcesContent":["export default {\n  daysC: document.querySelector(`[data-value=\"days\"]`),\n  hoursC: document.querySelector(`[data-value=\"hours\"]`),\n  minsC: document.querySelector(`[data-value=\"mins\"]`),\n  secondsC: document.querySelector(`[data-value=\"secs\"]`),\n}","import refs from './refs'\n\nclass CountdownTimer {\n    constructor({ targetDate, selector }) {\n        const { daysC, hoursC, minsC, secondsC } = refs\n        this.selector = selector;\n        this.refs = { daysC, hoursC, minsC, secondsC }\n        this.targetDate = targetDate;\n    \n        this.start()\n    }\n\n    start() {\n    setInterval(() => {\n      const deltaTime = this.targetDate - Date.now()\n        // const timeComponents = this.getTimeComponents(deltaTime)\n        // console.log(timeComponents);\n        this.insertValues(this.getTimeComponents(deltaTime))\n    }, 1000);\n  }\n\n    getTimeComponents(time) {\n        const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n      const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n      const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n      const seconds = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n       return { days,hours, mins, seconds };\n  }\n\n    pad(value) {\n      return String(value).padStart(2, '0');\n  }\n\n    insertValues({ days, hours, mins, seconds }) {\n      this.refs.daysC.innerHTML = days;\n      this.refs.hoursC.innerHTML = hours;\n      this.refs.minsC.innerHTML = mins;\n      this.refs.secondsC.innerHTML = seconds;\n}\n}\n\nconst timer = new CountdownTimer({\n\n    selector: '#timer-1',\n    targetDate: new Date('Jan 1, 2022'),\n});\n\n\n\n","import './sass/main.scss';\nimport './js/timer.js'\n\n"]}